name: Flutter Build Release

on: workflow_dispatch

jobs:
  test-app:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.1
      - name: Clone repository
        uses: actions/checkout@v4
      - run: flutter pub get
      - run: flutter clean
      - run: flutter test

  release-android:
    needs: [ test-app ]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.1
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Keystore
        env:
          CI: true
          CM_ENCODED_CERT: ${{ secrets.SIGN_STORE_CERT }}
        run: |
          echo "CM_KEYSTORE_PATH=$(pwd)/keystore.jks" >> $GITHUB_ENV
          echo $CM_ENCODED_CERT > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks
      - run: flutter pub get
      - run: flutter clean
      - name: Build APK
        env:
          CM_KEYSTORE_PASSWORD: ${{ secrets.SIGN_STORE_PASSWORD }}
          CM_KEY_ALIAS: ${{ secrets.SIGN_KEY }}
          CM_KEY_PASSWORD: ${{ secrets.SIGN_PASSWORD }}
        run: flutter build apk
      - name: Build APP BUNDLE
        env:
          CM_KEYSTORE_PASSWORD: ${{ secrets.SIGN_STORE_PASSWORD }}
          CM_KEY_ALIAS: ${{ secrets.SIGN_KEY }}
          CM_KEY_PASSWORD: ${{ secrets.SIGN_PASSWORD }}
        run: flutter build appbundle
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
      - name: Upload APP BUNDLE
        uses: actions/upload-artifact@v4
        with:
          name: app-release.aab
          path: build/app/outputs/bundle/release/app-release.aab

  archive:
    needs: [ release-android ]
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Get App Version
        id: project_version
        uses: RCSandberg/dart-flutter-read-package-version-action@v2.0.1

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk
      - name: Download APP BUNDLE
        uses: actions/download-artifact@v4
        with:
          name: app-release.aab
      - name: Prepare ARCHIVE NAME
        run: echo "APP_NAME=${{ github.event.repository.name }}-release-v${{ steps.project_version.outputs.semantic-version }}-buildNum_${{ github.run_number }}" >> $GITHUB_ENV
      - name: Archive
        run: |
          sudo apt-get update
          sudo apt-get install zip         
          mv -v app-release.apk ${{env.APP_NAME}}.apk
          mv -v app-release.aab ${{env.APP_NAME}}.aab
          ls -la
          zip -rv ${{env.APP_NAME}}.zip ${{env.APP_NAME}}.apk ${{env.APP_NAME}}.aab
      - name: Upload
        uses: adityak74/google-drive-upload-git-action@main
        with:
            credentials: ${{ secrets.G_DRIVE }}
            filename: ${{ env.APP_NAME }}.zip
            folderId: ${{ secrets.G_DRIVE_RELEASE_FOLDER }}
            overwrite: "true"